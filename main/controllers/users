const mysql = require("mysql");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const { promisify } = require("util");

const db = mysql.createConnection({
    host: process.env.DATABASE_HOST,
    user: process.env.DATABASE_USER,
    password: process.env.DATABASE_PASS,
    database: process.env.DATABASE,
});

exports.login = async (req,res) => { 
    try{
    const { email, set_password} = req.body;
    if(!email || !set_password){
        return res.status(400).render("login",{msg:"Please Enter your Email and Password",msg_type:"error"});
    }

    db.query('select * from login_users where email=?',[email], async(error,result) =>{
    //    console.log(result);
       if(result?.length <= 0){
        return res.status(401).render("login",{msg:"Please Enter your Email",msg_type:"error"});
       }
       else{
        if(!(await bcrypt.compare(set_password,result[0].PASS))){
            return res.status(401).render("login",{msg:"Password incorrect",msg_type:"error"});
        }
        else{
            const id = result[0].ID; 
            const token = jwt.sign({ id : id}, process.env.JWT_SECRET, {expiresIn : process.env.JWT_EXPIRES_IN,});
            // console.log("The token is : "+token);
            const cookieOptions = {
                expires:new Date(
                    Date.now()+process.env.JWT_COOKIE_EXPIRES * 24 * 60 * 60 * 1000), 
                    httponly: true,
            };
            res.cookie("hari",token,cookieOptions);
            res.status(200).redirect("/home");
        }
    }
    });
}

catch(error)
{
    console.log(error);
}
};


exports.register = (req,res) => {
    /*      // shows in terminal that the action is done
                console.log("Form Submitted");

            // response from the website and tells us the validation is done
                res.send("Form Submitted");    

            //shows in terminal that the details from the database
                console.log(username);
                console.log(email);   
    */
    console.log(req.body);
    const {username, email, set_password, confirm_password} = req.body;
    db.query('SELECT email FROM login_users WHERE email=?', [email],
    async (error,result) => {
        if(error){
            console.log(error);
        }
         else if(set_password !== confirm_password){
            return res.render("register",{msg:"Password does not match",msg_type:"error"});
        }
        if(result?.length>0){
            return res.render("register",{msg:"Email id already taken",msg_type:"error"});
        }
        
        let hashedPassword = await bcrypt.hash(set_password, 8);
        console.log(hashedPassword);

        db.query('insert into login_users set?',{name:username,email:email,pass:hashedPassword},
        (error,result) => {
            if(error){
                console.log(error);
            }
            else{
                console.log(result);
                return res.render("register",{msg:"User Registration Success",msg_type:"success"});
            }
        });
        // res.status(200).redirect("/loggedin");
    });
};


exports.isLoggedIn = async(req, res, next) => {
    // req.name="Check login";
    // console.log(req.cookies);
    if(req.cookies.hari){
        try {
        const decode=await promisify(jwt.verify)(req.cookies.hari, process.env.JWT_SECRET);
        // console.log(decode);
        db.query("select * from login_users where id=?",[decode.id],(err,results) => {
        // console.log(results);
        if(!results){
            return next();
        }
        req.user=results[0];
        return next();
      });   
        } catch (error) {
            console.log(error);
            return next();
        }
    }
    else{
    next();
    }
};

exports.logout = async (req, res) => {
    res.cookie("hari", "logout", {
      expires: new Date(Date.now() + 2 * 1000),
      httpOnly: true,
    });
    res.status(200).redirect("/");
  };

    //   exports.forgotpass = async(req,res) => {
    //     const {email,set_password,confirm_password}=req.body;
    //     db.query('UPDATE login_users SET set_password="set_password_1" , confirm_password="confirm_password_1" WHERE email=?',[email], async(error,result) => 
    //     {
    //          console.log(error)
    //          console.log(result)
    //     });
    //   };
